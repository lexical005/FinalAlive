/********************************************************************/
/*
	协议名称必须以Msg开头!
    协议id由0开始，按下面的定义顺序自动递增
*/

/*                        服务器间协议                              */
/********************************************************************/
    /*服务器之间互相注册*/
    @MsgServerRegister
        string serverType   /*服务器类型*/
        int32 serverID

    /*服务器之间维持连接不断开*/
    @MsgServerKeepAlive
/********************************************************************/



/*                      帐号验证、重连、踢人                        */
/********************************************************************/
    /* 客户端通过唯一字符串准备登录, 目前应用于: GameCenter, GooglePlay */
    /* 唯一字符串来源: 如 GameCenter, GooglePlay 账号返回的唯一字符串*/
    /*C->S, S->C*/
    @MsgPrepareLoginPlatformUniqueID
        /*C->S*/
        /*subChannel: 子渠道, 特定渠道可能会再次分发给多个特定渠道来运营*/
        string subChannel

        /*
        UUIDPlatformBound为空, UUIDPlatformLogin为空, 则代表首次申请新的游客账号登录.
            新建一个未绑定正式账号的游客账号返回给客户端
        UUIDPlatformBound为空, UUIDPlatformLogin不为空, 则代表准备以已登录过的游客账号登录.
            检索尝试登陆的游客账号数据
                如果未检索到，则新建一个未绑定正式账号的游客账号返回给客户端
                如果检索到了
                    如果游客账号已经与正式账号绑定，则新建一个未绑定正式账号的游客账号返回给客户端
                    如果游客账号已经未与正式账号绑定，则返回该游客账号
        UUIDPlatformBound不为空, 则代表准备以已登录过的正式账号登录.
            检索尝试登陆的正式账号数据
                如果检索到，则返回该正式账号
                如果未检索到
                    如果游客账号为空，则新建一个绑定正式账号的游客账号返回给客户端
                    如果游客账号不为空，检索游客账号
                        如果未检索到，则新建一个绑定正式账号的游客账号返回给客户端
                        如果检索到了
                            如果游客账号已经与正式账号绑定，则新建一个绑定正式账号的游客账号返回给客户端
                            如果游客账号已经未与正式账号绑定，则执行绑定，然后返回该游客账号
        */
        string UUIDPlatformBound    /*尝试将UUIDPlatformLogin绑定到的正式账号，仅用于C->S*/
        string UUIDPlatformLogin    /*要登陆的账号（可能是游客账号，也可能是正式账号）。服务端总会改写该字段*/

        /*登录校验相关*/
        string randomSalt
        int32 timestamp

        /*S->C*/
        int32 status            /*status: 0 新创建的账号; 1 老账号; 2 即将账号绑定*/
        int32 result


    /* 客户端通过唯一字符串登录, 目前应用于: GameCenter, GooglePlay */
    /*C->S, S->C*/
    @MsgLoginPlatformUniqueID
        /*C->S*/
        string tokenCustom      /*自定义实现的双端校验登陆有效性的token*/
        string deviceGUID       /*设备唯一标识*/

        /*S->C*/
        uint64 UUIDLogin        /*本次帐号登陆使用的标识*/
        int32 result


    /* 客户端通过第三方的 token 登录 */
    @MsgLoginPlatformSidToken
        /*C->S*/
        string tokenPlatform    /*平台方提供的本次登陆token*/
        string deviceGUID       /*设备唯一标识*/

        /*S->C*/
        uint64 UUIDLogin        /*本次帐号登陆使用的标识*/
        int32 result


    /* 重连协议 */
    /*C->S, S->C*/
    @MsgReLogin
        /*C->S*/
        string checkData        /*用于校验重连有效性*/
        string deviceGUID       /*设备唯一标识*/

        /*S->C*/
        int32 result


    /* 踢人协议 */
    /*S->C*/
    @MsgKick
        /*S->C*/
        int32 result        /*kick reason*/
/********************************************************************/



/*                  进入游戏世界与离开游戏世界                      */
/********************************************************************/
    /* 进入游戏世界协议 */
    /*C->S, S->C*/
    @MsgEnterGameWorld
        /*C->S*/
        int32 serverID      /*请求进入的游戏服务器id*/

        /*AgentServer->GameServer*/
        uint64 UUIDLogin    /*本次帐号登陆使用的标识*/

        /*S->C*/
        int32 result

    /*Agent断开连接时, 通知Server*/
    @MsgAgentDisConnect
/********************************************************************/



/*                          特殊协议                                */
/********************************************************************/
    /*维持连接不断开协议*/
    @MsgKeepAlive
        int32 number
/********************************************************************/



/*                          逻辑协议                                */
/********************************************************************/
/********************************************************************/


